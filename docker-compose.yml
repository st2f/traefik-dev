services:
  traefik:
    image: traefik:v3.3.4
    container_name: traefik
    ports:
      - 80:80
      - 8080:8080
      - 443:443
      - 3306:3306

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./certs:/etc/certs
      - ./log:/var/log
      - ./dynamic_conf.yml:/etc/traefik/dynamic_conf.yml
    networks:
      - proxy
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --api.debug=true
      - --log.level=DEBUG      
      - --log.filepath=/var/log/traefik.log
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --providers.file.filename=/etc/traefik/dynamic_conf.yml
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.mariadb.address=:3306

    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      #- traefik.http.services.traefik.loadbalancer.server.port=8080

    # whoami:
    #   image: containous/whoami:latest
    #   container_name: whoami
    #   labels:
    #     - "traefik.enable=true"
    #     - "traefik.http.routers.whoami.rule=Host(`whoami.app.localhost`)"
    #     - "traefik.http.routers.whoami.tls=true"
    #   networks:
    #     - proxy

networks:
  proxy:
    name: "proxy"
    external: true